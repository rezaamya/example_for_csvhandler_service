version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: csv-handler-service
    container_name: csv-handler-service-app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      - APP_PORT=${APP_PORT}
      - APP_JWT_SECRET=${APP_JWT_SECRET}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - RABBITMQ_PORT=5672
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - csv-handler-network

  postgres:
    image: postgres:12.19-alpine3.20
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - csv-handler-network

  rabbitmq:
    image: rabbitmq:3.13.6-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - csv-handler-network

networks:
  csv-handler-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:

